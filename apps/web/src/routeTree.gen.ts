/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AccountIndexImport } from './routes/account/index'
import { Route as AdminPromoteImport } from './routes/admin/promote'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'
import { Route as AdminBillingImport } from './routes/admin/billing'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AccountIndexRoute = AccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any)

const AdminPromoteRoute = AdminPromoteImport.update({
  id: '/admin/promote',
  path: '/admin/promote',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminBillingRoute = AdminBillingImport.update({
  id: '/admin/billing',
  path: '/admin/billing',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/billing': {
      id: '/admin/billing'
      path: '/admin/billing'
      fullPath: '/admin/billing'
      preLoaderRoute: typeof AdminBillingImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/admin/promote': {
      id: '/admin/promote'
      path: '/admin/promote'
      fullPath: '/admin/promote'
      preLoaderRoute: typeof AdminPromoteImport
      parentRoute: typeof rootRoute
    }
    '/account/': {
      id: '/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/billing': typeof AdminBillingRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/promote': typeof AdminPromoteRoute
  '/account': typeof AccountIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/billing': typeof AdminBillingRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/promote': typeof AdminPromoteRoute
  '/account': typeof AccountIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin/billing': typeof AdminBillingRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/promote': typeof AdminPromoteRoute
  '/account/': typeof AccountIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin/billing'
    | '/admin/dashboard'
    | '/admin/promote'
    | '/account'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/billing'
    | '/admin/dashboard'
    | '/admin/promote'
    | '/account'
  id:
    | '__root__'
    | '/'
    | '/admin/billing'
    | '/admin/dashboard'
    | '/admin/promote'
    | '/account/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminBillingRoute: typeof AdminBillingRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminPromoteRoute: typeof AdminPromoteRoute
  AccountIndexRoute: typeof AccountIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminBillingRoute: AdminBillingRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminPromoteRoute: AdminPromoteRoute,
  AccountIndexRoute: AccountIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin/billing",
        "/admin/dashboard",
        "/admin/promote",
        "/account/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin/billing": {
      "filePath": "admin/billing.tsx"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.tsx"
    },
    "/admin/promote": {
      "filePath": "admin/promote.tsx"
    },
    "/account/": {
      "filePath": "account/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
